policy_module({{role_name}}, 1.0)

require {
    #TODO replace unconfined to application role, type;
    type unconfined_t;
    role unconfined_r;
    type user_devpts_t;
    type bin_t;
    type fs_t;
    type shell_exec_t;
    class file { getattr open ioctl lock entrypoint execute execute_no_trans map read relabelto };
    class chr_file { append read write getattr ioctl };
    class dir { relabelto };
    class filesystem associate;
    class process setpgid;
}

# TODO: replace unconfined_r with application role
role unconfined_r types { {{role_name}}_t };

type {{role_name}}_t;
domain_type({{role_name}}_t)
type {{role_name}}_exec_t;
files_type({{role_name}}_exec_t)

#TODO replace unconfined_t with application type
domtrans_pattern(unconfined_t, {{role_name}}_exec_t, {{role_name}}_t)

allow {{role_name}}_t {{role_name}}_exec_t:file { entrypoint execute map read };
allow {{role_name}}_t shell_exec_t:file { execute execute_no_trans map };
allow {{role_name}}_t user_devpts_t:chr_file { append read write getattr ioctl };
allow {{role_name}}_t self:process { setpgid };
can_exec({{role_name}}_t bin_t)

allow {{role_name}}_t fs_t:filesystem associate;
allow unconfined_t {{role_name}}_t:file relabelto;
allow unconfined_t {{role_name}}_t:dir relabelto;

##### DO NOT EDIT ABOVE
###### YOU CAN ADD RULES BELOW
# e.g. type {{role_name}}_lib_t;
# e.g. files_type({{role_name}}_lib_t)
# e.g. allow {{role_name}}_t {{role_name}}_lib_t:file { read getattr };
